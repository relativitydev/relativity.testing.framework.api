name: FeatureBranch

env:
  Solution: source/${{ github.event.repository.name }}.sln
  Configuration: Release
  DOTNET_NOLOGO: 1
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  HOPPER_API_URL: "https://api.hopper.relativity.com/"
  HOPPER_USER: "testengineering@relativity.com"

on:
  pull_request:
    branches:
      - '*'
    
jobs:
  Build:
    runs-on: windows-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.408

    - name: Set Version
      run: |
        $VersionNumber = Get-Content "version.txt"
        $PackageVersion = "$($VersionNumber)-pre.${{ github.run_number }}"
        $FileVersion = "$($VersionNumber).${{ github.run_number }}"
        $AssemblyVersion = "$($VersionNumber).0"
        $InformationalVersion = "$($FileVersion) ${{ github.sha }}"

        [xml]$Props = Get-Content "Directory.Build.props"
        $Props.Project.PropertyGroup.PackageVersion = $PackageVersion
        $Props.Project.PropertyGroup.FileVersion = $FileVersion
        $Props.Project.PropertyGroup.AssemblyVersion = $AssemblyVersion
        $Props.Project.PropertyGroup.InformationalVersion = $InformationalVersion

        $Props.Save("Directory.Build.props")

    - name: Compile
      run: dotnet build "${{ env.Solution }}" --configuration "${{ env.Configuration }}" --nologo

    - name: Test
      run: dotnet test "${{ env.Solution }}" --filter "TestCategory!=FunctionalTests" --configuration "${{ env.Configuration }}" --nologo --no-build /p:collectcoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=../../Artifacts/Logs/coverage '--logger:nunit;LogFilePath="../../Artifacts/Logs/{assembly}.{framework}.TestResults.xml"' '--logger:trx;LogFileName="Relativity.Testing.Framework.Api.Tests.NETFramework462.TestResults.trx"'

    - name: Upload UnitTest Logs
      uses: actions/upload-artifact@v2
      if: success() || failure()
      with:
        name: Logs
        path: Artifacts/Logs/

    - name: Package
      run: dotnet pack "${{ env.Solution }}" --configuration "${{ env.Configuration }}" --nologo --no-build --include-symbols

    - name: Upload NuGet Packages
      uses: actions/upload-artifact@v2
      with:
        name: NuGetPackages
        path: Artifacts/NuGet/

    - name: Upload Tests
      uses: actions/upload-artifact@v2
      with:
        name: Tests
        path: source/Relativity.Testing.Framework.Api.FunctionalTests/bin/Debug/net462
        retention-days: 1

    - name: Upload DevelopmentScripts
      uses: actions/upload-artifact@v2
      with:
        name: DevelopmentScripts
        path: DevelopmentScripts
        retention-days: 1

  FunctionalTestSundrop:
    runs-on: windows-latest
    needs: Build

    steps:
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.408

    - name: Download DevelopmentScripts
      uses: actions/download-artifact@v2
      with:
        name: DevelopmentScripts
        path: DevelopmentScripts

    - name: Download Tests
      uses: actions/download-artifact@v2
      with:
        name: Tests
        path: Tests

    - name: Functional Test Sundrop
      continue-on-error: true
      env:
        DirectoryId: ${{ secrets.DIRECTORYID }}
        ClientId: ${{ secrets.CLIENTID }}
        ClientSecret: ${{ secrets.CLIENTSECRET }}
      working-directory: DevelopmentScripts
      run: |
        .\Invoke-FunctionalTest.ps1 `
          -ClientID ${{ env.ClientId }} `
          -ClientSecret ${{ env.CLIENTSECRET }} `
          -DirectoryID ${{ env.DirectoryId }} `
          -VirtualMachineTag ${{ github.repository }}.${{ github.workflow }}.${{ github.run_id }} `
          -HopperAPIURL ${{ env.HOPPER_API_URL }} `
          -HopperUsername ${{ env.HOPPER_USER }} `
          -BuildOwner ${{ github.actor }} `
          -ProductName ${{ github.event.repository.name }} `
          -SUTVersion aio-sundrop-1

    - name: Upload Logs
      uses: actions/upload-artifact@v2
      if: success() || failure()
      with:
        name: SundropLogs
        path: Artifacts/Logs/

  FunctionalTestTigerLily:
    runs-on: windows-latest
    needs: Build

    steps:
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.408

    - name: Download DevelopmentScripts
      uses: actions/download-artifact@v2
      with:
        name: DevelopmentScripts
        path: DevelopmentScripts

    - name: Download Tests
      uses: actions/download-artifact@v2
      with:
        name: Tests
        path: Tests

    - name: Functional Test TigerLily
      continue-on-error: true
      env:
        DirectoryId: ${{ secrets.DIRECTORYID }}
        ClientId: ${{ secrets.CLIENTID }}
        ClientSecret: ${{ secrets.CLIENTSECRET }}
      working-directory: DevelopmentScripts
      run: |
        .\Invoke-FunctionalTest.ps1 `
          -ClientID ${{ env.ClientId }} `
          -ClientSecret ${{ env.CLIENTSECRET }} `
          -DirectoryID ${{ env.DirectoryId }} `
          -VirtualMachineTag ${{ github.repository }}.${{ github.workflow }}.${{ github.run_id }} `
          -HopperAPIURL ${{ env.HOPPER_API_URL }} `
          -HopperUsername ${{ env.HOPPER_USER }} `
          -BuildOwner ${{ github.actor }} `
          -ProductName ${{ github.event.repository.name }} `
          -SUTVersion aio-tigerlily-ea

    - name: Upload Logs
      uses: actions/upload-artifact@v2
      if: success() || failure()
      with:
        name: TigerLilyLogs
        path: Artifacts/Logs/

  FunctionalTestOsier:
    runs-on: windows-latest
    needs: Build

    steps:
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.408

    - name: Download DevelopmentScripts
      uses: actions/download-artifact@v2
      with:
        name: DevelopmentScripts
        path: DevelopmentScripts

    - name: Download Tests
      uses: actions/download-artifact@v2
      with:
        name: Tests
        path: Tests

    - name: Functional Test Osier
      continue-on-error: true
      env:
        DirectoryId: ${{ secrets.DIRECTORYID }}
        ClientId: ${{ secrets.CLIENTID }}
        ClientSecret: ${{ secrets.CLIENTSECRET }}
      working-directory: DevelopmentScripts
      run: |
        .\Invoke-FunctionalTest.ps1 `
          -ClientID ${{ env.ClientId }} `
          -ClientSecret ${{ env.CLIENTSECRET }} `
          -DirectoryID ${{ env.DirectoryId }} `
          -VirtualMachineTag ${{ github.repository }}.${{ github.workflow }}.${{ github.run_id }} `
          -HopperAPIURL ${{ env.HOPPER_API_URL }} `
          -HopperUsername ${{ env.HOPPER_USER }} `
          -BuildOwner ${{ github.actor }} `
          -ProductName ${{ github.event.repository.name }} `
          -SUTVersion aio-osier-2

    - name: Upload Logs
      uses: actions/upload-artifact@v2
      if: success() || failure()
      with:
        name: OsierLogs
        path: Artifacts/Logs/

  FunctionalTestWhiteSedge:
    runs-on: windows-latest
    needs: Build

    steps:
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.408

    - name: Download DevelopmentScripts
      uses: actions/download-artifact@v2
      with:
        name: DevelopmentScripts
        path: DevelopmentScripts

    - name: Download Tests
      uses: actions/download-artifact@v2
      with:
        name: Tests
        path: Tests

    - name: Functional Test White Sedge
      continue-on-error: true
      env:
        DirectoryId: ${{ secrets.DIRECTORYID }}
        ClientId: ${{ secrets.CLIENTID }}
        ClientSecret: ${{ secrets.CLIENTSECRET }}
      working-directory: DevelopmentScripts
      run: |
        .\Invoke-FunctionalTest.ps1 `
          -ClientID ${{ env.ClientId }} `
          -ClientSecret ${{ env.CLIENTSECRET }} `
          -DirectoryID ${{ env.DirectoryId }} `
          -VirtualMachineTag ${{ github.repository }}.${{ github.workflow }}.${{ github.run_id }} `
          -HopperAPIURL ${{ env.HOPPER_API_URL }} `
          -HopperUsername ${{ env.HOPPER_USER }} `
          -BuildOwner ${{ github.actor }} `
          -ProductName ${{ github.event.repository.name }} `
          -SUTVersion aio-whitesedge-ea

    - name: Upload Logs
      uses: actions/upload-artifact@v2
      if: success() || failure()
      with:
        name: WhiteSedgeLogs
        path: Artifacts/Logs/
